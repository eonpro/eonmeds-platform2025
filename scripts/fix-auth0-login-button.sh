#!/bin/bash
set -euo pipefail

echo "üîß FIXING AUTH0 LOGIN BUTTON"
echo "================================"
echo ""

cd packages/frontend

# Step 1: Clean everything
echo "üßπ Step 1: Cleaning old build..."
rm -rf build node_modules package-lock.json
echo "‚úÖ Cleaned"
echo ""

# Step 2: Fresh install
echo "üì¶ Step 2: Installing dependencies..."
npm install
echo "‚úÖ Dependencies installed"
echo ""

# Step 3: Create proper .env files with Auth0 config
echo "üìù Step 3: Setting up Auth0 configuration..."

# Create .env.production with correct values
cat > .env.production << 'EOF'
REACT_APP_AUTH0_DOMAIN=dev-dvouayl22wlz8zwq.us.auth0.com
REACT_APP_AUTH0_CLIENT_ID=VPA89aq0Y7N05GvX5KqkDm5JLXPknG0L
REACT_APP_AUTH0_AUDIENCE=https://api.eonmeds.com
REACT_APP_AUTH0_REDIRECT_URI=https://d3p4f8m2bxony8.cloudfront.net/callback
REACT_APP_API_BASE_URL=https://qm6dnecfhp.us-east-1.awsapprunner.com/api/v1
REACT_APP_API_URL=https://qm6dnecfhp.us-east-1.awsapprunner.com
EOF

# Also create .env for the build process
cp .env.production .env

echo "‚úÖ Auth0 configuration set"
echo ""

# Step 4: Build with environment variables
echo "üî® Step 4: Building React app with Auth0 config..."

# Export variables for the build
export REACT_APP_AUTH0_DOMAIN=dev-dvouayl22wlz8zwq.us.auth0.com
export REACT_APP_AUTH0_CLIENT_ID=VPA89aq0Y7N05GvX5KqkDm5JLXPknG0L
export REACT_APP_AUTH0_AUDIENCE=https://api.eonmeds.com
export REACT_APP_AUTH0_REDIRECT_URI=https://d3p4f8m2bxony8.cloudfront.net/callback
export REACT_APP_API_BASE_URL=https://qm6dnecfhp.us-east-1.awsapprunner.com/api/v1
export REACT_APP_API_URL=https://qm6dnecfhp.us-east-1.awsapprunner.com

# Build with PUBLIC_URL set
PUBLIC_URL=https://d3p4f8m2bxony8.cloudfront.net \
NODE_ENV=production \
CI=false \
DISABLE_ESLINT_PLUGIN=true \
TSC_COMPILE_ON_ERROR=true \
npm run build

echo "‚úÖ Build complete"
echo ""

# Step 5: Verify Auth0 config is in the build
echo "üîç Step 5: Verifying Auth0 configuration in build..."
if grep -q "dev-dvouayl22wlz8zwq.us.auth0.com" build/static/js/main.*.js; then
    echo "‚úÖ Auth0 domain found in build"
else
    echo "‚ùå WARNING: Auth0 domain not found in build!"
fi

if grep -q "VPA89aq0Y7N05GvX5KqkDm5JLXPknG0L" build/static/js/main.*.js; then
    echo "‚úÖ Auth0 client ID found in build"
else
    echo "‚ùå WARNING: Auth0 client ID not found in build!"
fi
echo ""

# Step 6: Deploy to S3
echo "‚òÅÔ∏è Step 6: Deploying to S3..."
aws s3 sync build/ s3://eonmeds-frontend-staging/ \
    --delete \
    --region us-east-1 \
    --cache-control "no-cache, no-store, must-revalidate"

echo "‚úÖ Deployed to S3"
echo ""

# Step 7: Invalidate CloudFront
echo "üîÑ Step 7: Invalidating CloudFront cache..."
aws cloudfront create-invalidation \
    --distribution-id EZBKJZ75WFBQ9 \
    --paths "/*" \
    --region us-east-1 > /dev/null

echo "‚úÖ CloudFront cache invalidated"
echo ""

echo "================================"
echo "‚úÖ AUTH0 LOGIN FIX COMPLETE!"
echo "================================"
echo ""
echo "The Auth0 configuration has been fixed and deployed."
echo ""
echo "üåê Your app is at: https://d3p4f8m2bxony8.cloudfront.net"
echo ""
echo "‚è±Ô∏è Wait 2-3 minutes for CloudFront to update"
echo "üîÑ Then do a hard refresh (Cmd+Shift+R)"
echo "üñ±Ô∏è The Log In button should now work!"
echo ""
echo "Auth0 Settings Applied:"
echo "  Domain: dev-dvouayl22wlz8zwq.us.auth0.com"
echo "  Client ID: VPA89aq0Y7N05GvX5KqkDm5JLXPknG0L"
echo "  Callback: https://d3p4f8m2bxony8.cloudfront.net/callback"
